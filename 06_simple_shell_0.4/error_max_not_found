#!/bin/bash
#
# Empty the PATH and check if /bin/ls still works

command="0x00007ffccef0a7600x00007ffccef0a7600x00007ffccef0a7600x00007ffccef0a7600x00007ffccef0a7600x00007ffccef0a7600x00007ffccef0a7600x00007ffccef0a7600x00007ffccef0a7600x00007ffccef0a7600x00007ffccef0a7600x00007ffccef0a7600x00007ffccef0a7600x00007ffccef0a7600x0"
tmp_file="checker_tmp_file_$RANDOM"
EXPECT="1: ${command}: not found"


# clean up
stop_shell
rm -f $tmp_file

# create a pseudo random file
touch $tmp_file
# send comman

$ECHO "$command" | $SHELL 2> /dev/stdout > /dev/null | $CUT --fields=2- --delimiter=":" | $CUT --characters=2- > $OUTPUTFILE 2> $ERROROUTPUTFILE &



#$OUTPUTFILE > $ERROROUTPUTFILE &
#cat checker_output_21273 | cut --fields=4- --delimiter=":" | cut --characters=2-

#$CAT $OUTPUTFILE | $CUT --fields=4- --delimiter=":" > $ERROROUTPUTFILE &
#$CAT $OUTPUTFILE | $CUT --fields=4- --delimiter=":" > $OUTPUTFILE &

# wait a little bit
$SLEEP $SLEEPSECONDS


# check the result
nmatch=`$CAT $OUTPUTFILE`
if [ "$nmatch" = "$EXPECT" ]; then
    print_ok
else
    print_ko
	$ECHO -e "    >[\033[31mYour message error\033[37m]";
	$ECHO -e "\t$(cat $OUTPUTFILE)";
	$ECHO -e "    >[\033[32mExpect message error\033[37m]";
	$ECHO -e "\t${EXPECT}";
fi
# clean up
stop_shell
#$RM -f $tmp_file
